@mixin box-sizing($arguments...) {
  -moz-box-sizing: $arguments;
  -webkit-box-sizing: $arguments;
  box-sizing: $arguments;
}

@mixin box-shadow($arguments...) {
  -webkit-box-shadow: $arguments;
  -moz-box-shadow: $arguments;
  box-shadow: $arguments;
}

@mixin border-box() {
  @include box-sizing(border-box);
}

@mixin content-box() {
  @include box-sizing(content-box);
}

@mixin border-radius($radius) {
  border-radius: $radius;
  -moz-background-clip: padding-box;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
}

@mixin font-family() {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
    sans-serif;
}

@mixin webfont-lato() {
  @include font-family();
  font-weight: 400;
}

@mixin webfont-lato-bold() {
  @include font-family();
  font-weight: 700;
}

@mixin ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin transform($x, $y) {
  -webkit-transform: translate($x, $y);
  -moz-transform: translate($x, $y);
  transform: translate($x, $y);
}

@mixin flex-box() {
  display: flex;
  min-height: 0; // See https://stackoverflow.com/a/28639686
  min-width: 0;
}

@mixin disabled() {
  pointer-events: none;
  @include animate(smoothDisabled, $duration: 0.3s) {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0.5;
    }
  }
}

@mixin clamp-text($lines) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  /* autoprefixer: ignore next */
  //This is required so that scss compiler does not remove box-orient style.
  -webkit-box-orient: vertical;
  // removes extra spacing between lines
  white-space: normal;

  div {
    white-space: normal;
  }
}

$easings: (
  ease-in: ease-in,
  ease-base-out: cubic-bezier(0.7, 0.3, 0.1, 1),
  in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53),
  in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19),
  in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22),
  in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06),
  in-sine: cubic-bezier(0.47, 0, 0.745, 0.715),
  in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035),
  in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335),
  in-back: cubic-bezier(0.6, -0.28, 0.735, 0.045),
  out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94),
  out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1),
  out-quart: cubic-bezier(0.165, 0.84, 0.44, 1),
  out-quint: cubic-bezier(0.23, 1, 0.32, 1),
  out-sine: cubic-bezier(0.39, 0.575, 0.565, 1),
  out-expo: cubic-bezier(0.19, 1, 0.22, 1),
  out-circ: cubic-bezier(0.075, 0.82, 0.165, 1),
  out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275),
  in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955),
  in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1),
  in-out-quart: cubic-bezier(0.77, 0, 0.175, 1),
  in-out-quint: cubic-bezier(0.86, 0, 0.07, 1),
  in-out-sine: cubic-bezier(0.445, 0.05, 0.55, 0.95),
  in-out-expo: cubic-bezier(1, 0, 0, 1),
  in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86),
  in-out-back: cubic-bezier(0.68, -0.55, 0.265, 1.55),
);

@mixin animate($name, $duration: 0.5s, $ease: 'in-out-circ', $delay: 0s, $fill-mode: forwards, $iteration-count: 1) {
  animation-name: $name;
  animation-delay: $delay;
  animation-duration: $duration;
  animation-timing-function: ease($ease);
  animation-fill-mode: $fill-mode;
  animation-iteration-count: $iteration-count;

  @at-root {
    @keyframes #{$name} {
      @content;
    }
  }
}

@function ease($key) {
  @if map-has-key($easings, $key) {
    @return map-get($easings, $key);
  }

  @warn "Unkown '#{$key}' in $ease.";
  @return map-get($easings, 'in-out-circ');
}

//media mixins

$screen-sm-max: 1359px; // small desktop or tablet
$screen-md-max: 1579px; // medium desktop
$screen-lg-max: 1679px; // large desktop

// Small devices
@mixin sm {
  @media (max-width: #{$screen-sm-max}) {
    @content;
  }
}
// Medium desktops
@mixin md {
  @media (max-width: #{$screen-md-max}) {
    @content;
  }
}
// large desktops
@mixin lg {
  @media (max-width: #{$screen-lg-max}) {
    @content;
  }
}
// xl desktops
@mixin xl {
  @media (min-width: #{$screen-lg-max}) {
    @content;
  }
}
